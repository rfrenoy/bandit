%% Exp3 bandit% Implementation of the Exp3 algorithm initially proposed by 'The% nonstochastic multiarmed bandit problem' [Auer et al., 2002].% Author : Rémy Frenoyclassdef exp3 < bandit  properties    w;      % Confidence weigths for every arm  end  methods        % Build a new Exp3 object    function obj = exp3(nb_arms, gamma_value)      obj@bandit(nb_arms,gamma_value);      obj.w = ones(nb_arms,1);    end        % Compute probability to select arm i    % see 'The non-stochastic multi-armed bandit problem' from Peter Auer for further proof    function pb = proba(obj,i)      pb = (1-obj.gamma) * obj.w(i)/sum(obj.w) + obj.gamma/obj.K;    end        % Call proba function to collect proba to draw each arm    % Draw arm according to given probabilities    function [arm,pb] = select(obj)      pb = zeros(obj.K,1);      for k=1:obj.K        pb(k) = obj.proba(k);      end      rand_draw = random('unif',0,1);      cumul = cumsum(pb);      for k=1:length(cumul)        if rand_draw <= cumul(k)          arm = k;          return;        end      end    end        % Update weigth according to received reward    function update(obj, i, reward)      p = obj.proba(i);      obj.w(i) = obj.w(i) * exp(obj.gamma*reward / (p*obj.K));    end     end  end